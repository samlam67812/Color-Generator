{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICwBvDC,EA3BK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAC/BC,oBAAS,GADsB,mBACjDC,EADiD,KAC3CC,EAD2C,KAElDC,EAAMP,EAAIQ,KAAK,KAEfC,GADMd,EAAQ,WAAR,cAAYK,IACV,WAAOG,IAQrB,OAPAO,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACR,KACH,OAAO,kBAAKO,aAAaF,MACzB,CAACN,IAGD,6BAASS,UAAS,gBAAWZ,EAAQ,IAClC,eACHa,MAAO,CAACC,gBAAgB,OAAD,OAAST,EAAT,MACvBU,QAAS,WACPX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,KAE9B,uBAAGK,UAAU,iBAAiBb,EAA9B,KACA,uBAAGa,UAAU,eAAeL,GAC3BJ,GAAS,uBAAGS,UAAU,SAAb,0B,gBCyBDO,MA7Cf,WAAgB,IAAD,EACYjB,mBAAS,IADrB,mBACNkB,EADM,KACAC,EADA,OAEYnB,oBAAS,GAFrB,mBAENoB,EAFM,KAEAC,EAFA,OAGUrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,KAH7C,mBAGNC,EAHM,KAGDC,EAHC,KAiBb,OACE,oCACA,6BAASf,UAAU,aACjB,gDACA,0BAAMgB,SAhBW,SAACC,GACpBA,EAAEC,iBAEF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GACR,MAAOT,GACPC,GAAS,GACTS,QAAQC,IAAIX,MASV,2BAAOY,KAAK,OAAMC,MAAOf,EAAOgB,SAAU,SAACP,GAAD,OAAMR,EAASQ,EAAEQ,OAAOF,QAClEG,YAAY,UACZ1B,UAAS,UAAMU,EAAQ,QAAU,QAEjC,4BAAQV,UAAU,MAAMsB,KAAK,UAA7B,WAIF,gDAEF,6BAAStB,UAAU,UAChBc,EAAKa,KAAI,SAACnB,EAAOpB,GAChB,OAAO,kBAAC,EAAD,eACPwC,IAAKxC,GACDoB,EAFG,CAGPpB,MAAOA,EACPC,SAAUmB,EAAM9B,aCtCxBmD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e10de84c.chunk.js","sourcesContent":["function componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? '0' + hex : hex;\r\n}\r\n\r\nfunction rgbToHex(r, g, b) {\r\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nexport default rgbToHex;\r\n","import React, { useState, useEffect } from 'react'\r\nimport rgbToHex from './utils'\r\n\r\nconst SingleColor = ({ rgb, weight, index, hexColor }) => {\r\n  const [alert,setAlert] = useState(false)\r\n  const bcg = rgb.join(',') // return array for rgb color \r\n  const hex = rgbToHex(...rgb) // turn rgb back to hex for display\r\n  const hexValue = `#${hexColor}`\r\n  useEffect(()=>{\r\n    const timeout = setTimeout(()=>{\r\n      setAlert(false)\r\n    }, 3000)\r\n    return ()=> clearTimeout(timeout)\r\n  },[alert])\r\n  \r\n  return (\r\n    <article className={`color ${index > 10 &&\r\n       'color-light'}`} //index:10 the base color \r\n    style={{backgroundColor: `rgb(${bcg})`}} \r\n    onClick={()=>{\r\n      setAlert(true);\r\n      navigator.clipboard.writeText(hexValue)}}\r\n    >\r\n      <p className='percent-value'>{weight}%</p>\r\n      <p className='color-value'>{hexValue}</p>\r\n      {alert && <p className='alert'>copied to clickboard</p>}\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default SingleColor\r\n","import React, { useState } from 'react'\r\nimport SingleColor from './SingleColor'\r\n\r\nimport Values from 'values.js'\r\n\r\nfunction App() {\r\n  const [color,setColor] = useState('');\r\n  const [error,setError] = useState(false);\r\n  const [list,setList] = useState(new Values('#7FFFD4').all(10));\r\n\r\n  const handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n    // from values.js \r\n    try{\r\n      let colors = new Values(color).all(10) // turn input into 10decimal value for rgb\r\n      setList(colors);\r\n    } catch (error){\r\n      setError(true)\r\n      console.log(error)\r\n    }\r\n  };\r\n   \r\n  return (\r\n    <>\r\n    <section className='container'>\r\n      <h3>Color Gernerator</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type='text'value={color} onChange={(e)=> setColor(e.target.value)}\r\n        placeholder=\"#7FFFD4\"\r\n        className={`${ error ? 'error' : null }`}\r\n        />\r\n        <button className='btn' type='submit'>\r\n          submit\r\n        </button>\r\n      </form>\r\n      <h3>(click to copy)</h3>\r\n    </section>\r\n    <section className=\"colors\">\r\n      {list.map((color, index)=>{\r\n        return <SingleColor \r\n        key={index} \r\n        {...color} \r\n        index={index} \r\n        hexColor={color.hex}/>\r\n      })}\r\n    </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}